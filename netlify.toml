[build]
  command = "npm install --include=dev --force && npm run build"
  publish = ".next"
  functions = "netlify/functions"

# Configuration pour Next.js
[build.environment]
  NEXT_TELEMETRY_DISABLED = "1"
  # Optimisation pour Next.js (pas de NODE_ENV non-standard)
  NETLIFY_USE_FFMPEG = "true"
  NEXT_PUBLIC_NETLIFY_DEPLOYMENT = "true"
  # Chemins pour FFmpeg et FFprobe
  FFMPEG_PATH = "/opt/build/repo/node_modules/@ffmpeg-installer/ffmpeg/ffmpeg"
  FFPROBE_PATH = "/opt/build/repo/node_modules/@ffprobe-installer/ffprobe/ffprobe"
  NODE_OPTIONS = "--max_old_space_size=4096"

# Configuration des plugins
[[plugins]]
  package = "@netlify/plugin-nextjs"
  [plugins.inputs]
    # Diviser les fonctions pour réduire la taille
    split_functions = true
    # Limiter les dépendances incluses dans la fonction SSR principale
    external_node_modules = [
      "@ffmpeg-installer/ffmpeg",
      "@ffprobe-installer/ffprobe",
      "fluent-ffmpeg",
      "canvas",
      "puppeteer"
    ]
    # Augmenter le temps de build pour permettre la compression du bundle
    build_timeout_minutes = 15

# Configuration spécifique pour les fonctions Netlify
[functions]
  directory = "netlify/functions"
  node_bundler = "esbuild"
  external_node_modules = [
    "@ffmpeg-installer/ffmpeg",
    "@ffprobe-installer/ffprobe",
    "fluent-ffmpeg",
    "canvas",
    "puppeteer"
  ]
  included_files = [
    ".env", 
    ".env.production", 
    ".env.local", 
    ".env.production.local"
  ]

# Configuration spécifique pour la fonction de traitement vidéo
[functions.video-processing]
  included_files = [
    "node_modules/@ffmpeg-installer/**/*",
    "node_modules/@ffprobe-installer/**/*",
    "node_modules/fluent-ffmpeg/**/*"
  ]
  node_bundler = "esbuild"
  timeout = 25  # 25 secondes (maximum possible)

# Configuration du handler de Next.js principal pour réduire sa taille
[functions.___netlify-server-handler]
  external_node_modules = [
    "@ffmpeg-installer/ffmpeg",
    "@ffprobe-installer/ffprobe",
    "fluent-ffmpeg",
    "canvas",
    "puppeteer"
  ]

# Configuration des headers de sécurité
[[headers]]
  for = "/*"
  [headers.values]
    X-Content-Type-Options = "nosniff"
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"

# Configuration pour les fichiers statiques
[[headers]]
  for = "/_next/static/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Redirection des API vers les fonctions Netlify
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/api/:splat"
  status = 200 

# Redirection spécifique pour la création de vidéos
[[redirects]]
  from = "/api/create-video"
  to = "/.netlify/functions/video-processing"
  status = 200
  force = true

# Dossier temporaire pour les vidéos générées
[[redirects]]
  from = "/temp-videos/*"
  to = "/.netlify/functions/serve-video/:splat"
  status = 200

# Ajouter support pour les images optimisées via Netlify Image CDN
[[redirects]]
  from = "/_next/image"
  to = "/.netlify/images"
  status = 200
  query = { url = ":url", w = ":width", q = ":quality" }

[[redirects]]
  from = "/_ipx/*"
  to = "/.netlify/images"
  status = 200
  query = { url = ":url", w = ":width", q = ":quality" } 